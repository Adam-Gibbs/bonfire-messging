# serverless.yml
org: adamgibbs
app: ping-messaging
service: ping-messaging

plugins:
  - serverless-python-requirements
  - serverless-dynamodb-local
  - serverless-wsgi

custom:
  tableName: 'ping-messaging-table-${self:provider.stage}'
  wsgi:
    app: handler.app
    packRequirements: false
    pythonBin: python3
  pythonRequirements:
    slim: true
    pythonBin: python3
    dockerizePip: non-linux
  dynamodb:
    start:
      migrate: true
    stages:
      - test
      - dev

package:
  individually: false
  exclude:
    - '**/*'
  include:
    - handler.py

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: eu-west-2
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      - { "Fn::GetAtt": ["PingDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  getUser:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /users/{user_id}
          method: get

  createUser:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /users
          method: post
  hello:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /
          method: get

resources:
  Resources:
    PingDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}